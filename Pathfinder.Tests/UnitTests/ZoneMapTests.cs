using System.Collections.Generic;
using System.Numerics;
using Pathfinder.Map;
using Pathfinder.People;
using Xunit;

namespace Pathfinder.Tests.UnitTests
{
    public class ZoneMapTests
    {
        [Fact]
        public void CreateGridCanGenerateGridFromCorner()
        {
            // Arrange
            var want = new Node[1, 1];
            want[0, 0] = new Node(Vector3.Zero);

            // Act
            var zoneMap = ZoneMap.NewGridFromVector2(Vector2.One);
            var got = zoneMap.MapGrid;

            // Assert
            Assert.Equal(want.Length, got.Length);
            GridSetup.AssertGridMapEqual(want, got);
        }

        [Fact]
        public void CanCreateGridWithMultipleNodes()
        {
            // Arrange
            var want = GridSetup.SetupThreeByThreeGrid();

            // Act
            var grid = ZoneMap.NewGridFromVector2(new Vector2(3f, 3f));
            var got = grid.MapGrid;

            // Assert
            Assert.Equal(want.Length, got.Length);
            GridSetup.AssertGridMapEqual(want, got);
        }

        [Fact]
        public void GetNeighboursCanGetNeighborsFromEdgeNode()
        {
            //Arrange
            var want = GridSetup.GetNeighborsListForEdgeNode();

            //Act
            var grid = ZoneMap.NewGridFromVector2(new Vector2(3f, 3f));
            var got = grid.GetNeighbours(grid.MapGrid[2, 2]);

            //Assert
            GridSetup.AssertListGridNodesEqual(want, got);
        }

        [Fact]
        public void NodeFromWorldPointCanGetANodeFromNegativeVector()
        {
            var grid = GridSetup.SetupSmallGrid();
            var want = grid.MapGrid[0, 0];

            var got = grid.GetNodeFromWorldPoint(new Vector3(-1, 0, -1));

            Assert.Equal(want.WorldPosition, got.WorldPosition);
        }

        [Fact]
        public void NodeFromWorldPointCanGetANodeFromPositiveVector()
        {
            var grid = GridSetup.SetupSmallGrid();
            var want = grid.MapGrid[2, 2];

            var got = grid.GetNodeFromWorldPoint(new Vector3(1, 0, 1));

            Assert.Equal(want.WorldPosition, got.WorldPosition);
        }

        [Fact]
        public void NodeFromWorldPointCanGetANodeFromBigGrid()
        {
            var grid = GridSetup.SetupBigGrid();
            var want = grid.MapGrid[30, 5];

            var got = grid.GetNodeFromWorldPoint(new Vector3(5, 0, -20));

            Assert.Equal(want.WorldPosition, got.WorldPosition);
        }

        [Theory]
        [InlineData(-1, -1, 0, 0)]
        [InlineData(0, -1, 1, 0)]
        [InlineData(-1, 0, 0, 1)]
        [InlineData(0, 0, 1, 1)]
        [InlineData(1, 0, 2, 1)]
        [InlineData(-1, -1, 0, 0)]
        [InlineData(0, 1, 1, 2)]
        [InlineData(1, 1, 2, 2)]
        public void AddUnWalkableNodeUpdatesTheNode(float x, float y, int gridX, int gridY)
        {
            var grid = GridSetup.SetupSmallGrid();
            var position = new Vector3(x, 0, y);
            var want = new Node(position, false);

            grid.AddUnWalkableNode(position);
            var got = grid.MapGrid[gridX, gridY];

            Assert.Equal(want.Walkable, got.Walkable);
        }

        [Fact]
        public void TestPrintSmallGrid()
        {
            const string want = @"
-------------------
|     |     |     |
-------------------
|     |     |     |
-------------------
|     |     |     |
-------------------
";

            var grid = GridSetup.SetupSmallGrid();
            string got = grid.Print();
            Assert.Equal(want, got);
        }

        [Fact]
        public void TestPrintWithCoordsSmallGrid()
        {
            const string want = @"
-------------------------
| -1,1  |  0,1  |  1,1  |
-------------------------
| -1,0  |  0,0  |  1,0  |
-------------------------
| -1,-1 |  0,-1 |  1,-1 |
-------------------------
";

            var grid = GridSetup.SetupSmallGrid();
            string got = grid.PrintWithCoords();
            Assert.Equal(want, got);
        }

        [Fact]
        public void TestPrintSmallGridWithObstacles()
        {
            const string want = @"
-------------------
|  x  |  x  |     |
-------------------
|  x  |  x  |     |
-------------------
|     |     |     |
-------------------
";

            // var MapGrid = SetupSmallGrid();
            var grid = GridSetup.SetupSmallGrid();
            var pos1 = new Vector3(0, 0, 1);
            var pos2 = new Vector3(-1, 0, 1);
            var pos3 = new Vector3(-1, 0, 0);

            grid.AddUnWalkableNode(Vector3.Zero);
            grid.AddUnWalkableNode(pos1);
            grid.AddUnWalkableNode(pos2);
            grid.AddUnWalkableNode(pos3);
            string got = grid.Print();

            GridSetup.AssertPointNotWalkable(grid, pos1);
            GridSetup.AssertPointNotWalkable(grid, pos2);
            GridSetup.AssertPointNotWalkable(grid, pos3);

            Assert.Equal(want, got);
        }

        [Fact]
        public void TestPrintMediumGrid()
        {
            const string want = @"
-------------------------------
|     |     |     |     |     |
-------------------------------
|     |     |     |     |     |
-------------------------------
|     |     |     |     |     |
-------------------------------
|     |     |     |     |     |
-------------------------------
|     |     |     |     |     |
-------------------------------
";

            var grid = GridSetup.SetupMediumGrid();
            string got = grid.Print();
            Assert.Equal(want, got);
        }

        [Fact]
        public void TestPrintBigGrid()
        {
            const string want = @"
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
";

            var grid = GridSetup.SetupBigGrid();
            string got = grid.Print();
            Assert.Equal(want, got);
        }

        [Fact]
        public void TestPrintPathShowsAllWithLegend()
        {
            const string want = @"
Visualization of the path
s = start
e = end
w = waypoint
x = obstacle
-------------------------------
|     |     |     |     |     |
-------------------------------
|  e  |  w  |     |     |     |
-------------------------------
|  x  |  x  |  x  |  w  |     |
-------------------------------
|     |  w  |  w  |     |     |
-------------------------------
|  s  |     |     |     |     |
-------------------------------
";

            var pathfinding = GridSetup.SetupForPathfinding();

            pathfinding.ZoneMap.AddUnWalkableNode(Vector3.Zero);
            pathfinding.ZoneMap.AddUnWalkableNode(new Vector3(-1, 0, 0));
            pathfinding.ZoneMap.AddUnWalkableNode(new Vector3(-2, 0, 0));
            pathfinding.ZoneMap.AddUnWalkableNode(new Vector3(-3, 0, 0));
            pathfinding.ZoneMap.AddUnWalkableNode(new Vector3(-4, 0, 0));


            var path = new[]
            {
                new Vector3(-2, 0, -2),
                new Vector3(-1, 0, -1),
                new Vector3(0, 0, -1),
                new Vector3(1, 0, 0),
                new Vector3(-1, 0, 1),
                new Vector3(-2, 0, 1)
            };

            // act
            string got = pathfinding.ZoneMap.PrintPath(path);


            // assert
            Assert.Equal(want, got);
        }


        [Fact]
        public void TestCanPrintUnknownGrid()
        {
            const string want = @"
-------------------
|  ?  |  ?  |  ?  |
-------------------
|  ?  |  ?  |  ?  |
-------------------
|  ?  |  ?  |  ?  |
-------------------
";
            var grid = GridSetup.SetupSmallGrid();
            string got = grid.PrintKnown();

            Assert.Equal(want, got);
        }

        [Fact]
        public void TestCanPrintUnknownGridWithKnownSpots()
        {
            const string want = @"
-------------------
|  ?  |  ?  |  ?  |
-------------------
|  ?  |     |     |
-------------------
|     |  ?  |     |
-------------------
";
            var grid = GridSetup.SetupSmallGrid();

            grid.AddKnownNode(new Vector3(0, 0, 0));
            grid.AddKnownNode(new Vector3(1, 0, 0));
            grid.AddKnownNode(new Vector3(1, 0, -1));
            grid.AddKnownNode(new Vector3(-1, 0, -1));
            string got = grid.PrintKnown();

            Assert.Equal(want, got);
        }


        [Fact]
        public void TestCanSetUnknownState()
        {
            const bool want = false;
            var grid = GridSetup.SetupSmallGrid();
            grid.MapGrid[0, 0].Unknown = want;
            bool got = grid.MapGrid[0, 0].Unknown;

            Assert.Equal(want, got);
        }

        [Theory]
        [InlineData(-1, -1, 0, 0)]
        [InlineData(0, -1, 1, 0)]
        [InlineData(-1, 0, 0, 1)]
        [InlineData(0, 0, 1, 1)]
        [InlineData(1, 0, 2, 1)]
        [InlineData(-1, -1, 0, 0)]
        [InlineData(0, 1, 1, 2)]
        [InlineData(1, 1, 2, 2)]
        public void TestAddKnownNodes(float x, float y, int gridX, int gridY)
        {
            var grid = GridSetup.SetupSmallGrid();
            var position = new Vector3(x, 0, y);
            const bool want = false;

            grid.AddKnownNode(position);
            bool got = grid.MapGrid[gridX, gridY].Unknown;

            Assert.Equal(want, got);
        }

        [Fact]
        public void AddNpcAddsToList()
        {
            var grid = GridSetup.SetupSmallGrid();
            var want = new List<Person>();

            var npc = new Person(3, "rabbit", Vector3.One) {MapName = grid.MapName};
            want.Add(npc);

            grid.AddNpc(new Person(3, "rabbit", Vector3.One));
            var got = grid.NpcList;

            AssertNpcListEqual(want, got);
        }

        [Fact]
        public void GetUnknownNodes()
        {
            var want = new List<Node>
            {
                new Node(new Vector3(-1, 0, -1)),
                new Node(new Vector3(-1, 0, 0)),
                new Node(new Vector3(-1, 0, 1)),
                new Node(new Vector3(0, 0, -1)),
                new Node(new Vector3(0, 0, 1)),
                new Node(new Vector3(1, 0, -1)),
                new Node(new Vector3(1, 0, 0)),
                new Node(new Vector3(1, 0, 1))
            };

            var grid = GridSetup.SetupSmallGrid();
            grid.MapGrid[1, 1].Unknown = false;

            var got = grid.UnknownNodes;

            Assert.Equal(want.Count, got.Count);
            for (var i = 0; i < want.Count; i++)
            {
                Assert.Equal(want[i].WorldPosition, got[i].WorldPosition);
                Assert.Equal(want[i].Unknown, got[i].Unknown);
            }
        }

        private static void AssertNpcListEqual(List<Person> want, List<Person> got)
        {
            Assert.Equal(want.Count, got.Count);
            for (var i = 0; i < want.Count; i++)
            {
                Assert.Equal(want[i].Name, got[i].Name);
                Assert.Equal(want[i].MapName, got[i].MapName);
                Assert.Equal(want[i].Position, got[i].Position);
            }
        }
    }
}